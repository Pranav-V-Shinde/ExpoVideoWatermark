{"version":3,"file":"VideoView.web.js","sourceRoot":"","sources":["../src/VideoView.web.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, forwardRef, useImperativeHandle } from 'react';\r\nimport { StyleSheet } from 'react-native';\r\n\r\nimport VideoPlayer, { getSourceUri } from './VideoPlayer.web';\r\nimport type { VideoViewProps } from './VideoView.types';\r\n\r\nfunction createAudioContext(): AudioContext | null {\r\n  return typeof window !== 'undefined' ? new window.AudioContext() : null;\r\n}\r\n\r\nfunction createZeroGainNode(audioContext: AudioContext | null): GainNode | null {\r\n  const zeroGainNode = audioContext?.createGain() ?? null;\r\n\r\n  if (audioContext && zeroGainNode) {\r\n    zeroGainNode.gain.value = 0;\r\n    zeroGainNode.connect(audioContext.destination);\r\n  }\r\n  return zeroGainNode;\r\n}\r\n\r\nfunction mapStyles(style: VideoViewProps['style']): React.CSSProperties {\r\n  const flattenedStyles = StyleSheet.flatten(style);\r\n  // Looking through react-native-web source code they also just pass styles directly without further conversions, so it's just a cast.\r\n  return flattenedStyles as React.CSSProperties;\r\n}\r\n\r\nexport function isPictureInPictureSupported(): boolean {\r\n  return typeof document === 'object' && typeof document.exitPictureInPicture === 'function';\r\n}\r\n\r\nexport const VideoView = forwardRef((props: { player?: VideoPlayer } & VideoViewProps, ref) => {\r\n  const videoRef = useRef<null | HTMLVideoElement>(null);\r\n  const mediaNodeRef = useRef<null | MediaElementAudioSourceNode>(null);\r\n  const hasToSetupAudioContext = useRef(false);\r\n  const fullscreenChangeListener = useRef<null | (() => void)>(null);\r\n  const isWaitingForFirstFrame = useRef(false);\r\n\r\n  /**\r\n   * Audio context is used to mute all but one video when multiple video views are playing from one player simultaneously.\r\n   * Using audio context nodes allows muting videos without displaying the mute icon in the video player.\r\n   * We have to keep the context that called createMediaElementSource(videoRef), as the method can't be called\r\n   * for the second time with another context and there is no way to unbind the video and audio context afterward.\r\n   */\r\n  const audioContextRef = useRef<null | AudioContext>(null);\r\n  const zeroGainNodeRef = useRef<null | GainNode>(null);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    enterFullscreen: async () => {\r\n      if (!props.allowsFullscreen) {\r\n        return;\r\n      }\r\n      await videoRef.current?.requestFullscreen();\r\n    },\r\n    exitFullscreen: async () => {\r\n      await document.exitFullscreen();\r\n    },\r\n    startPictureInPicture: async () => {\r\n      await videoRef.current?.requestPictureInPicture();\r\n    },\r\n    stopPictureInPicture: async () => {\r\n      try {\r\n        await document.exitPictureInPicture();\r\n      } catch (e) {\r\n        if (e instanceof DOMException && e.name === 'InvalidStateError') {\r\n          console.warn('The VideoView is not in Picture-in-Picture mode.');\r\n        } else {\r\n          throw e;\r\n        }\r\n      }\r\n    },\r\n  }));\r\n\r\n  useEffect(() => {\r\n    const onEnter = () => {\r\n      props.onPictureInPictureStart?.();\r\n    };\r\n    const onLeave = () => {\r\n      props.onPictureInPictureStop?.();\r\n    };\r\n    const onLoadStart = () => {\r\n      isWaitingForFirstFrame.current = true;\r\n    };\r\n    const onCanPlay = () => {\r\n      if (isWaitingForFirstFrame.current) {\r\n        props.onFirstFrameRender?.();\r\n      }\r\n      isWaitingForFirstFrame.current = false;\r\n    };\r\n    videoRef.current?.addEventListener('enterpictureinpicture', onEnter);\r\n    videoRef.current?.addEventListener('leavepictureinpicture', onLeave);\r\n    videoRef.current?.addEventListener('loadstart', onLoadStart);\r\n    videoRef.current?.addEventListener('loadeddata', onCanPlay);\r\n\r\n    return () => {\r\n      videoRef.current?.removeEventListener('enterpictureinpicture', onEnter);\r\n      videoRef.current?.removeEventListener('leavepictureinpicture', onLeave);\r\n      videoRef.current?.removeEventListener('loadstart', onLoadStart);\r\n      videoRef.current?.removeEventListener('loadeddata', onCanPlay);\r\n    };\r\n  }, [videoRef, props.onPictureInPictureStop, props.onPictureInPictureStart]);\r\n\r\n  // Adds the video view as a candidate for being the audio source for the player (when multiple views play from one\r\n  // player only one will emit audio).\r\n  function attachAudioNodes() {\r\n    const audioContext = audioContextRef.current;\r\n    const zeroGainNode = zeroGainNodeRef.current;\r\n    const mediaNode = mediaNodeRef.current;\r\n\r\n    if (audioContext && zeroGainNode && mediaNode) {\r\n      props.player.mountAudioNode(audioContext, zeroGainNode, mediaNode);\r\n    } else {\r\n      console.warn(\r\n        \"Couldn't mount audio node, this might affect the audio playback when using multiple video views with the same player.\"\r\n      );\r\n    }\r\n  }\r\n\r\n  function detachAudioNodes() {\r\n    const audioContext = audioContextRef.current;\r\n    const mediaNode = mediaNodeRef.current;\r\n    if (audioContext && mediaNode && videoRef.current) {\r\n      props.player.unmountAudioNode(videoRef.current, audioContext, mediaNode);\r\n    }\r\n  }\r\n\r\n  function maybeSetupAudioContext() {\r\n    if (\r\n      !hasToSetupAudioContext.current ||\r\n      !navigator.userActivation.hasBeenActive ||\r\n      !videoRef.current\r\n    ) {\r\n      return;\r\n    }\r\n    const audioContext = createAudioContext();\r\n\r\n    detachAudioNodes();\r\n    audioContextRef.current = audioContext;\r\n    zeroGainNodeRef.current = createZeroGainNode(audioContextRef.current);\r\n    mediaNodeRef.current = audioContext\r\n      ? audioContext.createMediaElementSource(videoRef.current)\r\n      : null;\r\n    attachAudioNodes();\r\n    hasToSetupAudioContext.current = false;\r\n  }\r\n\r\n  function fullscreenListener() {\r\n    if (document.fullscreenElement === videoRef.current) {\r\n      props.onFullscreenEnter?.();\r\n    } else {\r\n      props.onFullscreenExit?.();\r\n    }\r\n  }\r\n\r\n  function setupFullscreenListener() {\r\n    fullscreenChangeListener.current = fullscreenListener;\r\n    videoRef.current?.addEventListener('fullscreenchange', fullscreenChangeListener.current);\r\n  }\r\n\r\n  function cleanupFullscreenListener() {\r\n    if (fullscreenChangeListener.current) {\r\n      videoRef.current?.removeEventListener('fullscreenchange', fullscreenChangeListener.current);\r\n      fullscreenChangeListener.current = null;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (videoRef.current) {\r\n      props.player?.mountVideoView(videoRef.current);\r\n    }\r\n    setupFullscreenListener();\r\n    attachAudioNodes();\r\n\r\n    return () => {\r\n      if (videoRef.current) {\r\n        props.player?.unmountVideoView(videoRef.current);\r\n      }\r\n      cleanupFullscreenListener();\r\n      detachAudioNodes();\r\n    };\r\n  }, [props.player]);\r\n\r\n  return (\r\n    <video\r\n      controls={props.nativeControls ?? true}\r\n      controlsList={props.allowsFullscreen ? undefined : 'nofullscreen'}\r\n      crossOrigin={props.crossOrigin}\r\n      style={{\r\n        ...mapStyles(props.style),\r\n        objectFit: props.contentFit,\r\n      }}\r\n      onPlay={() => {\r\n        maybeSetupAudioContext();\r\n      }}\r\n      // The player can autoplay when muted, unmuting by a user should create the audio context\r\n      onVolumeChange={() => {\r\n        maybeSetupAudioContext();\r\n      }}\r\n      ref={(newRef) => {\r\n        // This is called with a null value before `player.unmountVideoView` is called,\r\n        // we can't assign null to videoRef if we want to unmount it from the player.\r\n        if (newRef && !newRef.isEqualNode(videoRef.current)) {\r\n          videoRef.current = newRef;\r\n          hasToSetupAudioContext.current = true;\r\n          maybeSetupAudioContext();\r\n        }\r\n      }}\r\n      disablePictureInPicture={!props.allowsPictureInPicture}\r\n      playsInline={props.playsInline}\r\n      src={getSourceUri(props.player?.src) ?? ''}\r\n    />\r\n  );\r\n});\r\nexport default VideoView;\r\n"]}